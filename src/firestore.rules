rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUserInCompany(companyId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == companyId;
    }

    // Company-level access
    match /companies/{companyId} {
      allow create: if isAuthenticated();
      allow read: if isUserInCompany(companyId);
      
      match /reports/{reportId} {
        allow read, write: if isUserInCompany(companyId);
      }
      
      match /payments/{paymentId} {
        allow read, write: if isUserInCompany(companyId);
      }
      
      match /regions/{regionId} {
        allow read, write: if isUserInCompany(companyId);
      }
    }

    // Root-level collections
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && 
        isUserInCompany(resource.data.companyId);
      allow write: if isAuthenticated() && 
        isUserInCompany(request.resource.data.companyId);
    }

    match /reports/{reportId} {
      allow read: if isAuthenticated() && 
        isUserInCompany(resource.data.companyId);
      allow write: if isAuthenticated() && 
        isUserInCompany(request.resource.data.companyId);
    }

    // User profiles
    match /users/{userId} {
      allow read, write: if isAuthenticated() && (request.auth.uid == userId || 
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'));
    }
  }
} 